library(data.table)
library(leaflet)
library(sp)
library(tmap)
library(spData)
library(conflicted)
library(plyr)
library(tidyr)
library(lubridate)
library(dplyr)
setwd('C:/Users/Paul Cho/Desktop/Bootcamp/project/shiny_e_com/')
# [1] "order_id"                      "customer_id"                   "order_status"
# [4] "order_purchase_timestamp"      "order_approved_at"             "order_delivered_carrier_date"
# [7] "order_delivered_customer_date" "order_estimated_delivery_date"
po_delivery <- fread("./datasets/olist_orders_dataset.csv", header=TRUE)
# [1] "order_id"            "order_item_id"       "product_id"          "seller_id"           "shipping_limit_date"
# [6] "price"               "freight_value"
po_items <- fread("./datasets/olist_order_items_dataset.csv", header=TRUE)
# [1] "review_id"               "order_id"                "review_score"            "review_comment_title"
# [5] "review_comment_message"  "review_creation_date"    "review_answer_timestamp"
reviews <- fread("./datasets/olist_order_reviews_dataset.csv", header=TRUE)
# [1] "customer_id"              "customer_unique_id"       "customer_zip_code_prefix" "customer_city"
# [5] "customer_state"
customers <- fread("./datasets/olist_customers_dataset.csv", header=TRUE)
# [1] "geolocation_zip_code_prefix" "geolocation_lat"             "geolocation_lng"
# [4] "geolocation_city"            "geolocation_state"
geo <- fread("./datasets/olist_geolocation_dataset.csv", header=TRUE)
# [1] "order_id"             "payment_sequential"   "payment_type"         "payment_installments" "payment_value"
payment <- fread("./datasets/olist_order_payments_dataset.csv", header=TRUE)
# [1] "seller_id"              "seller_zip_code_prefix" "seller_city"            "seller_state"
seller <- fread("./datasets/olist_sellers_dataset.csv", header=TRUE)
# [1] "product_id"                 "product_category_name"      "product_name_lenght"        "product_description_lenght"
# [5] "product_photos_qty"         "product_weight_g"           "product_length_cm"          "product_height_cm"
# [9] "product_width_cm"
product <- fread("./datasets/olist_products_dataset.csv", header=TRUE)
category_eng <- fread("./datasets/product_category_name_translation.csv", header=TRUE)
#Fixing categorynames columns. font broke due to spanish?
names(category_eng) <- c('product_category_name','product_category_name_english')
# append the translated column
join(product, category_eng,
type = "left", by = 'product_category_name') -> product
# get volume of each products in meters
product %>%
mutate(product_volume_m = product_length_cm*product_height_cm*product_width_cm/100) -> product
# get total cost by summing shipping_cost and product_cost
po_items %>%
mutate(invoice = price + freight_value) -> po_items
# [1] "product_id"                    "product_category_name"         "product_name_lenght"
# [4] "product_description_lenght"    "product_photos_qty"            "product_weight_g"
# [7] "product_length_cm"             "product_height_cm"             "product_width_cm"
# [10] "product_category_name_english" "product_volume"
po_items %>%
join(product, type='left') %>%
join(po_delivery, type='left') %>%
join(reviews, type='left') %>%
join(customers, type='left') %>%
join(payment, type='left') %>%
join(seller, type='left') %>%
select(customer_id,
order_id,
order_item_id,
order_status,
order_purchase_timestamp,
order_approved_at,
order_delivered_carrier_date,
shipping_limit_date,
order_delivered_customer_date,
order_estimated_delivery_date,
product_id,
product_category_name_english,
product_weight_g,
product_volume_m,
price,
freight_value,
invoice,
review_score,
payment_type,
customer_zip_code_prefix,
customer_city,
customer_state,
seller_id,
seller_zip_code_prefix,
seller_city,
seller_state) %>%
rename(
PO_date = order_purchase_timestamp, # purchase_order
SO_date = order_approved_at, #sales_order
DO_date = shipping_limit_date, #deliver_order
GI_date = order_delivered_carrier_date, #goods_issue
GR_date = order_delivered_customer_date, #goods_receipt
c_RDD = order_estimated_delivery_date, #customer_RequiredDeliveryDate
c_zip = customer_zip_code_prefix,
c_city = customer_city,
c_state = customer_state,
product_category = product_category_name_english,
s_zip = seller_zip_code_prefix,
s_city = seller_city,
s_state = seller_state) %>%
mutate(
PO_date = lubridate::as_datetime(PO_date),
SO_date = lubridate::as_datetime(SO_date),
DO_date = lubridate::as_datetime(DO_date),
GI_date = lubridate::as_datetime(GI_date),
GR_date = lubridate::as_datetime(GR_date),
c_RDD = lubridate::as_datetime(c_RDD)) %>%
mutate(
PO_date = lubridate::date(PO_date),
SO_date = lubridate::date(SO_date),
GI_date = lubridate::date(GI_date),
DO_date = lubridate::date(DO_date),
GR_date = lubridate::date(GR_date),
c_RDD = lubridate::date(c_RDD)) -> po_master
# [1] "order_id"                      "customer_id"                   "order_status"
# [4] "order_purchase_timestamp"      "order_approved_at"             "order_delivered_carrier_date"
# [7] "order_delivered_customer_date" "order_estimated_delivery_date"
po_delivery <- fread("./datasets/olist_orders_dataset.csv", header=TRUE)
# [1] "order_id"            "order_item_id"       "product_id"          "seller_id"           "shipping_limit_date"
# [6] "price"               "freight_value"
po_items <- fread("./datasets/olist_order_items_dataset.csv", header=TRUE)
# [1] "review_id"               "order_id"                "review_score"            "review_comment_title"
# [5] "review_comment_message"  "review_creation_date"    "review_answer_timestamp"
reviews <- fread("./datasets/olist_order_reviews_dataset.csv", header=TRUE)
# [1] "customer_id"              "customer_unique_id"       "customer_zip_code_prefix" "customer_city"
# [5] "customer_state"
customers <- fread("./datasets/olist_customers_dataset.csv", header=TRUE)
# [1] "geolocation_zip_code_prefix" "geolocation_lat"             "geolocation_lng"
# [4] "geolocation_city"            "geolocation_state"
geo <- fread("./datasets/olist_geolocation_dataset.csv", header=TRUE)
# [1] "order_id"             "payment_sequential"   "payment_type"         "payment_installments" "payment_value"
payment <- fread("./datasets/olist_order_payments_dataset.csv", header=TRUE)
# [1] "seller_id"              "seller_zip_code_prefix" "seller_city"            "seller_state"
seller <- fread("./datasets/olist_sellers_dataset.csv", header=TRUE)
# [1] "product_id"                 "product_category_name"      "product_name_lenght"        "product_description_lenght"
# [5] "product_photos_qty"         "product_weight_g"           "product_length_cm"          "product_height_cm"
# [9] "product_width_cm"
product <- fread("./datasets/olist_products_dataset.csv", header=TRUE)
category_eng <- fread("./datasets/product_category_name_translation.csv", header=TRUE)
#Fixing categorynames columns. font broke due to spanish?
names(category_eng) <- c('product_category_name','product_category_name_english')
# append the translated column
join(product, category_eng,
type = "left", by = 'product_category_name') -> product
# get volume of each products in meters
product %>%
mutate(product_volume_m = product_length_cm*product_height_cm*product_width_cm/100) -> product
# get volume of each products in meters
product %>%
dplyr::mutate(product_volume_m = product_length_cm*product_height_cm*product_width_cm/100) -> product
# get total cost by summing shipping_cost and product_cost
po_items %>%
mutate(invoice = price + freight_value) -> po_items
